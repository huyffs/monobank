def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('~/togethery-prod-key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion flutter.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.su93rheroes.monobank.monobank"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        if (System.getenv('APPCENTER_BUILD_ID')) {
            versionCode System.getenv('APPCENTER_BUILD_ID').toInteger()
        } else {
            versionCode flutterVersionCode.toInteger()
        }
        versionName flutterVersionName
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
            keyAlias "androiddebugkey"
            storePassword "android"
            keyPassword "android"
        }
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
    
    flavorDimensions "mode"
    productFlavors {
        dev {
            dimension "mode"
            applicationIdSuffix '.dev'
            versionNameSuffix "-dev"
            resValue "string", "app_name", "MonoBank Dev"
            resValue "string", "app_domain", "dev.be.monobank.app"
            resValue "string", "share_path", ""
            resValue "string", "facebook_app_id", "2425067807796843"
            resValue "string", "fb_login_protocol_scheme", "fb2425067807796843"
            signingConfig signingConfigs.debug
        }
        prod {
            resValue "string", "app_name", "MonoBank"
            resValue "string", "app_domain", "be.monobank.app"
            resValue "string", "share_path", ""
            resValue "string", "facebook_app_id", "763380757569322"
            resValue "string", "fb_login_protocol_scheme", "fb763380757569322"
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
